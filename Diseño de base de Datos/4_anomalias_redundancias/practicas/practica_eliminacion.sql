-- üìå Pr√°ctica: Correcci√≥n de Problemas de Eliminaci√≥n en Bases de Datos
-- Objetivo: Identificar y corregir anomal√≠as de eliminaci√≥n aplicando normalizaci√≥n.

-- 1Ô∏è‚É£ Creaci√≥n de una tabla con anomal√≠a de eliminaci√≥n (Ejemplo Incorrecto)
CREATE TABLE Empleados_Proyectos_Incorrecto (
    id_empleado INT,
    nombre VARCHAR(100),
    proyecto VARCHAR(100),
    PRIMARY KEY (id_empleado, proyecto)
);

-- Inserci√≥n de datos
INSERT INTO Empleados_Proyectos_Incorrecto VALUES (1, 'Pedro', 'Sistema Web');
INSERT INTO Empleados_Proyectos_Incorrecto VALUES (2, 'Ana', 'App M√≥vil');
INSERT INTO Empleados_Proyectos_Incorrecto VALUES (3, 'Carlos', 'Sistema Web');

-- üî¥ Problema: Si eliminamos al √∫ltimo empleado que trabaja en un proyecto, se pierde la informaci√≥n del proyecto.

-- 2Ô∏è‚É£ Normalizaci√≥n: Aplicando 1FN, 2FN y 3FN para corregir la anomal√≠a

-- üîπ Aplicaci√≥n de 1FN (Separar los datos en entidades √∫nicas sin grupos repetidos)
CREATE TABLE Empleados (
    id_empleado INT PRIMARY KEY,
    nombre VARCHAR(100)
);

CREATE TABLE Proyectos (
    id_proyecto INT PRIMARY KEY,
    nombre VARCHAR(100)
);

CREATE TABLE Empleados_Proyectos (
    id_empleado INT,
    id_proyecto INT,
    PRIMARY KEY (id_empleado, id_proyecto),
    FOREIGN KEY (id_empleado) REFERENCES Empleados(id_empleado),
    FOREIGN KEY (id_proyecto) REFERENCES Proyectos(id_proyecto)
);

-- üîπ Aplicaci√≥n de 2FN (Eliminar dependencias parciales)
-- Ahora, los datos del proyecto no dependen directamente del empleado.

-- üîπ Aplicaci√≥n de 3FN (Eliminar dependencias transitivas)
-- La informaci√≥n de los proyectos ahora es independiente y persistente.

-- 3Ô∏è‚É£ Insertando datos sin anomal√≠as de eliminaci√≥n
INSERT INTO Empleados VALUES (1, 'Pedro');
INSERT INTO Empleados VALUES (2, 'Ana');
INSERT INTO Empleados VALUES (3, 'Carlos');

INSERT INTO Proyectos VALUES (1, 'Sistema Web');
INSERT INTO Proyectos VALUES (2, 'App M√≥vil');

INSERT INTO Empleados_Proyectos VALUES (1, 1);
INSERT INTO Empleados_Proyectos VALUES (2, 2);
INSERT INTO Empleados_Proyectos VALUES (3, 1);

-- ‚úÖ Resultado: Ahora, si eliminamos a un empleado, la informaci√≥n del proyecto se mantiene.
